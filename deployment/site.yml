---
apiVersion: v1
kind: Service
metadata:
    name: frontend
    labels:
        app: beginnerpy
        tier: frontend
spec:
    type: NodePort
    ports:
      - port: 5000
        name: http
    selector:
        app: beginnerpy
        tier: frontend
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: frontend
    labels:
        app: beginnerpy
    annotations:
        kubernetes.io/ingress.class: "nginx"
        cert-manager.io/cluster-issuer: "letsencrypt"
spec:
    tls:
      - hosts:
        - beginnerpy.com
        secretName: beginnerpy-cert
    rules:
      - host: beginnerpy.com
        http:
            paths:
              - backend:
                    serviceName: frontend
                    servicePort: 5000
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: frontend
spec:
  maxReplicas: 6
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  targetCPUUtilizationPercentage: 70
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: frontend
    labels:
        app: beginnerpy
spec:
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxSurge: 2
            maxUnavailable: 50%
    selector:
        matchLabels:
            app: beginnerpy
            tier: frontend
    replicas: 1
    template:
        metadata:
            labels:
                app: beginnerpy
                tier: frontend
        spec:
            containers:
              - name: flask-site
                image: zzmmrmn/beginnerpy-site:0.0.5
                env:
                  - name: PRODUCTION
                    value: "PRODUCTION"
                  - name: "DB_HOST"
                    value: "private-personal-postgres-cluster-1-apr-26-backup-do-user-87772.a.db.ondigitalocean.com"
                  - name: "DB_PORT"
                    value: "25061"
                  - name: "DB_NAME"
                    value: "bpydb-pool"
                  - name: "DB_USER"
                    value: "beginnerpy"
                  - name: "DB_PASSWORD"
                    valueFrom:
                        secretKeyRef:
                            name: postgres-password
                            key: password
                ports:
                  - containerPort: 5000
                resources:
                    requests:
                        cpu: 100m
